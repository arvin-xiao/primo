package ${package.Service};

import ${package.Entity}.${entity};
import ${superServiceClassPackage};
import com.baomidou.mybatisplus.core.metadata.IPage;
import ${package.QueryBo}.${table.queryName};
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import java.util.List;

/**
 * <p>
 * 服务类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
public interface ${table.serviceName} extends ${superServiceClass}<${entity}> {
    /**
     * 按照条件分页查询
     * @param query 查询条件
     */
    IPage<${entity}> page(${table.queryName} query,int pageNo,int pageSize);

    /**
     * 查询单个的，注意，条件需要有唯一建
     * @param query
     * @return
     */
    ${entity} getOne(${table.queryName} query);

    /**
     * 按照条件分页查询
     * @param queryWrapper 查询条件
     */
    IPage<${entity}> page(QueryWrapper<${entity}> queryWrapper,int pageNo,int pageSize);

    /**
     * 按照条件分页查询-不查询总页数，当不需要总页数时，可极大提升查询性能
     * @param queryWrapper 查询条件
     */
    IPage<${entity}> pageNoCount(QueryWrapper<${entity}> queryWrapper, int pageNo, int pageSize);
    /**
     * 按照条件更新
     * @param entity
     * @param query
     * @return
     */
    boolean update(${entity} entity,${table.queryName} query);

    /**
     * 通过一个相等的条件，修改数据
     * @param entity 修改的数据
     * @param column 数据库列名
     * @param value 条件值
     * @return true-修改成功
     */
    boolean updateByColumn(${entity} entity,String column,Object value);

    /**
     * 按照条件查询所有
     * @param query 查询条件
     */
    List<${entity}> list(${table.queryName} query);

}
